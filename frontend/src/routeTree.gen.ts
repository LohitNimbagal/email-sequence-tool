/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as protectedRouteImport } from './routes/(protected)/route'
import { Route as protectedIndexImport } from './routes/(protected)/index'
import { Route as authRegisterImport } from './routes/(auth)/register'
import { Route as authLoginImport } from './routes/(auth)/login'
import { Route as protectedOutreachRouteImport } from './routes/(protected)/outreach/route'
import { Route as protectedOutreachIndexImport } from './routes/(protected)/outreach/index'
import { Route as protectedOutreachSequencesIndexImport } from './routes/(protected)/outreach/sequences/index'
import { Route as protectedOutreachOutboxIndexImport } from './routes/(protected)/outreach/outbox/index'
import { Route as protectedOutreachListsIndexImport } from './routes/(protected)/outreach/lists/index'
import { Route as protectedOutreachTemplatesTemplatesImport } from './routes/(protected)/outreach/templates/templates'
import { Route as protectedOutreachSequencesSequenceIdIndexImport } from './routes/(protected)/outreach/sequences/$sequenceId/index'

// Create/Update Routes

const protectedRouteRoute = protectedRouteImport.update({
  id: '/(protected)',
  getParentRoute: () => rootRoute,
} as any)

const protectedIndexRoute = protectedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => protectedRouteRoute,
} as any)

const authRegisterRoute = authRegisterImport.update({
  id: '/(auth)/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const authLoginRoute = authLoginImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const protectedOutreachRouteRoute = protectedOutreachRouteImport.update({
  id: '/outreach',
  path: '/outreach',
  getParentRoute: () => protectedRouteRoute,
} as any)

const protectedOutreachIndexRoute = protectedOutreachIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => protectedOutreachRouteRoute,
} as any)

const protectedOutreachSequencesIndexRoute =
  protectedOutreachSequencesIndexImport.update({
    id: '/sequences/',
    path: '/sequences/',
    getParentRoute: () => protectedOutreachRouteRoute,
  } as any)

const protectedOutreachOutboxIndexRoute =
  protectedOutreachOutboxIndexImport.update({
    id: '/outbox/',
    path: '/outbox/',
    getParentRoute: () => protectedOutreachRouteRoute,
  } as any)

const protectedOutreachListsIndexRoute =
  protectedOutreachListsIndexImport.update({
    id: '/lists/',
    path: '/lists/',
    getParentRoute: () => protectedOutreachRouteRoute,
  } as any)

const protectedOutreachTemplatesTemplatesRoute =
  protectedOutreachTemplatesTemplatesImport.update({
    id: '/templates/templates',
    path: '/templates/templates',
    getParentRoute: () => protectedOutreachRouteRoute,
  } as any)

const protectedOutreachSequencesSequenceIdIndexRoute =
  protectedOutreachSequencesSequenceIdIndexImport.update({
    id: '/sequences/$sequenceId/',
    path: '/sequences/$sequenceId/',
    getParentRoute: () => protectedOutreachRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(protected)': {
      id: '/(protected)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof protectedRouteImport
      parentRoute: typeof rootRoute
    }
    '/(protected)/outreach': {
      id: '/(protected)/outreach'
      path: '/outreach'
      fullPath: '/outreach'
      preLoaderRoute: typeof protectedOutreachRouteImport
      parentRoute: typeof protectedRouteImport
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/register': {
      id: '/(auth)/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof authRegisterImport
      parentRoute: typeof rootRoute
    }
    '/(protected)/': {
      id: '/(protected)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof protectedIndexImport
      parentRoute: typeof protectedRouteImport
    }
    '/(protected)/outreach/': {
      id: '/(protected)/outreach/'
      path: '/'
      fullPath: '/outreach/'
      preLoaderRoute: typeof protectedOutreachIndexImport
      parentRoute: typeof protectedOutreachRouteImport
    }
    '/(protected)/outreach/templates/templates': {
      id: '/(protected)/outreach/templates/templates'
      path: '/templates/templates'
      fullPath: '/outreach/templates/templates'
      preLoaderRoute: typeof protectedOutreachTemplatesTemplatesImport
      parentRoute: typeof protectedOutreachRouteImport
    }
    '/(protected)/outreach/lists/': {
      id: '/(protected)/outreach/lists/'
      path: '/lists'
      fullPath: '/outreach/lists'
      preLoaderRoute: typeof protectedOutreachListsIndexImport
      parentRoute: typeof protectedOutreachRouteImport
    }
    '/(protected)/outreach/outbox/': {
      id: '/(protected)/outreach/outbox/'
      path: '/outbox'
      fullPath: '/outreach/outbox'
      preLoaderRoute: typeof protectedOutreachOutboxIndexImport
      parentRoute: typeof protectedOutreachRouteImport
    }
    '/(protected)/outreach/sequences/': {
      id: '/(protected)/outreach/sequences/'
      path: '/sequences'
      fullPath: '/outreach/sequences'
      preLoaderRoute: typeof protectedOutreachSequencesIndexImport
      parentRoute: typeof protectedOutreachRouteImport
    }
    '/(protected)/outreach/sequences/$sequenceId/': {
      id: '/(protected)/outreach/sequences/$sequenceId/'
      path: '/sequences/$sequenceId'
      fullPath: '/outreach/sequences/$sequenceId'
      preLoaderRoute: typeof protectedOutreachSequencesSequenceIdIndexImport
      parentRoute: typeof protectedOutreachRouteImport
    }
  }
}

// Create and export the route tree

interface protectedOutreachRouteRouteChildren {
  protectedOutreachIndexRoute: typeof protectedOutreachIndexRoute
  protectedOutreachTemplatesTemplatesRoute: typeof protectedOutreachTemplatesTemplatesRoute
  protectedOutreachListsIndexRoute: typeof protectedOutreachListsIndexRoute
  protectedOutreachOutboxIndexRoute: typeof protectedOutreachOutboxIndexRoute
  protectedOutreachSequencesIndexRoute: typeof protectedOutreachSequencesIndexRoute
  protectedOutreachSequencesSequenceIdIndexRoute: typeof protectedOutreachSequencesSequenceIdIndexRoute
}

const protectedOutreachRouteRouteChildren: protectedOutreachRouteRouteChildren =
  {
    protectedOutreachIndexRoute: protectedOutreachIndexRoute,
    protectedOutreachTemplatesTemplatesRoute:
      protectedOutreachTemplatesTemplatesRoute,
    protectedOutreachListsIndexRoute: protectedOutreachListsIndexRoute,
    protectedOutreachOutboxIndexRoute: protectedOutreachOutboxIndexRoute,
    protectedOutreachSequencesIndexRoute: protectedOutreachSequencesIndexRoute,
    protectedOutreachSequencesSequenceIdIndexRoute:
      protectedOutreachSequencesSequenceIdIndexRoute,
  }

const protectedOutreachRouteRouteWithChildren =
  protectedOutreachRouteRoute._addFileChildren(
    protectedOutreachRouteRouteChildren,
  )

interface protectedRouteRouteChildren {
  protectedOutreachRouteRoute: typeof protectedOutreachRouteRouteWithChildren
  protectedIndexRoute: typeof protectedIndexRoute
}

const protectedRouteRouteChildren: protectedRouteRouteChildren = {
  protectedOutreachRouteRoute: protectedOutreachRouteRouteWithChildren,
  protectedIndexRoute: protectedIndexRoute,
}

const protectedRouteRouteWithChildren = protectedRouteRoute._addFileChildren(
  protectedRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof protectedIndexRoute
  '/outreach': typeof protectedOutreachRouteRouteWithChildren
  '/login': typeof authLoginRoute
  '/register': typeof authRegisterRoute
  '/outreach/': typeof protectedOutreachIndexRoute
  '/outreach/templates/templates': typeof protectedOutreachTemplatesTemplatesRoute
  '/outreach/lists': typeof protectedOutreachListsIndexRoute
  '/outreach/outbox': typeof protectedOutreachOutboxIndexRoute
  '/outreach/sequences': typeof protectedOutreachSequencesIndexRoute
  '/outreach/sequences/$sequenceId': typeof protectedOutreachSequencesSequenceIdIndexRoute
}

export interface FileRoutesByTo {
  '/login': typeof authLoginRoute
  '/register': typeof authRegisterRoute
  '/': typeof protectedIndexRoute
  '/outreach': typeof protectedOutreachIndexRoute
  '/outreach/templates/templates': typeof protectedOutreachTemplatesTemplatesRoute
  '/outreach/lists': typeof protectedOutreachListsIndexRoute
  '/outreach/outbox': typeof protectedOutreachOutboxIndexRoute
  '/outreach/sequences': typeof protectedOutreachSequencesIndexRoute
  '/outreach/sequences/$sequenceId': typeof protectedOutreachSequencesSequenceIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/(protected)': typeof protectedRouteRouteWithChildren
  '/(protected)/outreach': typeof protectedOutreachRouteRouteWithChildren
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/register': typeof authRegisterRoute
  '/(protected)/': typeof protectedIndexRoute
  '/(protected)/outreach/': typeof protectedOutreachIndexRoute
  '/(protected)/outreach/templates/templates': typeof protectedOutreachTemplatesTemplatesRoute
  '/(protected)/outreach/lists/': typeof protectedOutreachListsIndexRoute
  '/(protected)/outreach/outbox/': typeof protectedOutreachOutboxIndexRoute
  '/(protected)/outreach/sequences/': typeof protectedOutreachSequencesIndexRoute
  '/(protected)/outreach/sequences/$sequenceId/': typeof protectedOutreachSequencesSequenceIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/outreach'
    | '/login'
    | '/register'
    | '/outreach/'
    | '/outreach/templates/templates'
    | '/outreach/lists'
    | '/outreach/outbox'
    | '/outreach/sequences'
    | '/outreach/sequences/$sequenceId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/register'
    | '/'
    | '/outreach'
    | '/outreach/templates/templates'
    | '/outreach/lists'
    | '/outreach/outbox'
    | '/outreach/sequences'
    | '/outreach/sequences/$sequenceId'
  id:
    | '__root__'
    | '/(protected)'
    | '/(protected)/outreach'
    | '/(auth)/login'
    | '/(auth)/register'
    | '/(protected)/'
    | '/(protected)/outreach/'
    | '/(protected)/outreach/templates/templates'
    | '/(protected)/outreach/lists/'
    | '/(protected)/outreach/outbox/'
    | '/(protected)/outreach/sequences/'
    | '/(protected)/outreach/sequences/$sequenceId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  protectedRouteRoute: typeof protectedRouteRouteWithChildren
  authLoginRoute: typeof authLoginRoute
  authRegisterRoute: typeof authRegisterRoute
}

const rootRouteChildren: RootRouteChildren = {
  protectedRouteRoute: protectedRouteRouteWithChildren,
  authLoginRoute: authLoginRoute,
  authRegisterRoute: authRegisterRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(protected)",
        "/(auth)/login",
        "/(auth)/register"
      ]
    },
    "/(protected)": {
      "filePath": "(protected)/route.tsx",
      "children": [
        "/(protected)/outreach",
        "/(protected)/"
      ]
    },
    "/(protected)/outreach": {
      "filePath": "(protected)/outreach/route.tsx",
      "parent": "/(protected)",
      "children": [
        "/(protected)/outreach/",
        "/(protected)/outreach/templates/templates",
        "/(protected)/outreach/lists/",
        "/(protected)/outreach/outbox/",
        "/(protected)/outreach/sequences/",
        "/(protected)/outreach/sequences/$sequenceId/"
      ]
    },
    "/(auth)/login": {
      "filePath": "(auth)/login.tsx"
    },
    "/(auth)/register": {
      "filePath": "(auth)/register.tsx"
    },
    "/(protected)/": {
      "filePath": "(protected)/index.tsx",
      "parent": "/(protected)"
    },
    "/(protected)/outreach/": {
      "filePath": "(protected)/outreach/index.tsx",
      "parent": "/(protected)/outreach"
    },
    "/(protected)/outreach/templates/templates": {
      "filePath": "(protected)/outreach/templates/templates.tsx",
      "parent": "/(protected)/outreach"
    },
    "/(protected)/outreach/lists/": {
      "filePath": "(protected)/outreach/lists/index.tsx",
      "parent": "/(protected)/outreach"
    },
    "/(protected)/outreach/outbox/": {
      "filePath": "(protected)/outreach/outbox/index.tsx",
      "parent": "/(protected)/outreach"
    },
    "/(protected)/outreach/sequences/": {
      "filePath": "(protected)/outreach/sequences/index.tsx",
      "parent": "/(protected)/outreach"
    },
    "/(protected)/outreach/sequences/$sequenceId/": {
      "filePath": "(protected)/outreach/sequences/$sequenceId/index.tsx",
      "parent": "/(protected)/outreach"
    }
  }
}
ROUTE_MANIFEST_END */
